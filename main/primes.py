import sympy

max_width = 60
n = 53
ls = [2, 5, 11, 23]

with open('vm/primes.inc', 'w') as f:
    p32 = 2 ** 32
    while True:
        p = sympy.prevprime(int(n)+1)
        if p >= p32:
            break
        if len(ls) >= 32:
            break
        ls.append(p)
        n *= 1.75
    ml = max(map(len, map(str, ls)))
    n = (max_width - 5) // (ml + 2)
    f.write(f'// generated by: python3 main/primes.py\n\n')
    f.write(f'#include <stdint.h>\n\n')
    f.write(f'static uint32_t vm_primes_table[{len(ls)}] = ' + '{\n    ')
    for i, p in enumerate(ls):
        s = str(p)
        s = ' ' * (ml - len(s)) + s
        f.write(f' {s},')
        if i % n == n - 1:
            f.write('\n    ')
    f.write('\n};\n\n')
    f.write('static uint32_t vm_primes_mod(uint8_t p, uint32_t n) {\n')
    f.write('    switch (p) {\n')
    f.write('    default:\n')
    f.write('        __builtin_unreachable();\n')
    for i, p in enumerate(ls):
        f.write(f'    case {i}:\n')
        f.write(f'        return n % {p};\n')
    f.write('    }\n')
    f.write('}\n')
