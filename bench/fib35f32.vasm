
@fib:
    blt.f32 %1 2 [fib.then] [fib.else]
@fib.then:
    ret.f32 %1
@fib.else:
    sub.f32 %0 %1 2
    call %0 [fib] %0
    sub.f32 %1 %1 1
    call %1 [fib] %1
    add.f32 %0 %0 %1
    ret.f32 %0

@putn:
    blt.f32 %1 1 [putn.ret] [putn.digit]
@putn.digit:
    div.f32 %0 %1 10
    call %0 [putn] %0
    mod.f32 %1 %1 10
    add.f32 %1 %1 48
    out.f32 %1
    jump [putn.ret]
@putn.ret:
    ret.f32 0

@:
    move.f32 %0 35
    call %0 [fib] %0
    call %0 [putn] %0
    out.f32 10
    exit
