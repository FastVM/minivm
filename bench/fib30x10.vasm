
@fib:
    blt %1 2 [fib.then] [fib.else]
@fib.then:
    ret %1
@fib.else:
    sub %0 %1 2
    call %0 [fib] %0
    sub %1 %1 1
    call %1 [fib] %1
    add %0 %0 %1
    ret %0

@putnz:
    blt %1 1 [putnz.ret] [putnz.digit]
@putnz.digit:
    div %0 %1 10
    call %0 [putnz] %0
    mod %1 %1 10
    add %1 %1 48
    out %1
    ret 0
@putnz.ret: 
    ret 0

@putn:
    beq %1 0 [putn.zero] [putn.nonzero]
@putn.zero:
    out 48
    ret 0
@putn.nonzero:
    blt %1 0 [putn.neg] [putn.pos]
@putn.neg:
    sub %0 %1 %1
    sub %1 %0 %1
    out 45
    call %0 [putnz] %1
    ret 0
@putn.pos:
    call %0 [putnz] %1
    ret 0

@pfib:
    call %0 [fib] %1
    call %0 [putn] %0
    out 10
    ret 0

@:
    move.i8 %0 30
    call %0 [pfib] %0
    move.i16 %0 30
    call %0 [pfib] %0
    move.i32 %0 30
    call %0 [pfib] %0
    move.i64 %0 30
    call %0 [pfib] %0
    move.u8 %0 30
    call %0 [pfib] %0
    move.u16 %0 30
    call %0 [pfib] %0
    move.u32 %0 30
    call %0 [pfib] %0
    move.u64 %0 30
    call %0 [pfib] %0
    move.f32 %0 30
    call %0 [pfib] %0
    move.f64 %0 30
    call %0 [pfib] %0
    exit 
