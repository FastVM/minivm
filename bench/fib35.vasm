
@fib:
    blt.i64 %1 2 [fib.then] [fib.else]
@fib.then:
    ret.i64 %1
@fib.else:
    sub.i64 %0 %1 2
    call %0 [fib] %0
    sub.i64 %1 %1 1
    call %1 [fib] %1
    add.i64 %0 %0 %1
    ret.i64 %0

@putn:
    blt.i64 %1 1.i64 [putn.digit] [putn.ret]
@putn.digit:
    div.i64 %0 %1 10
    call %0 [putn] %0
    mod.i64 %1 %1 10
    add.i64 %1 %1 48
    putchar %1
    jump [putn.ret]
@putn.ret:
    mov.i64 %0 0.i64
    ret %0

@:
    mov.i64 %0 10.i64
    call %0 [fib] %0
    putchar.i64 %0
    exit
